#!/usr/bin/python3.4
#Bash History Analyser 0.01 NOT COMPLETED!
#by Faroogh Karimi Zadeh
#Under GNU GPL 3+
#farooghkarimizadeh@gmail.com
#github.com/farooghkarimizadeh/bha
#This software is free software and COMES WITHOUT ANY WARRENTY FROM MAIN AUTHOR

import sys
import os

def fexist(path): # file exist
    try:
        fs = open(path)
    except:
        return 0
    else:
        return 1

def usage():
    print('Usage: bha [History_file_path]')

def dictsort(adict): # this function sorts a map by its values (uses bubblesort) 
    keys = list(adict.keys())
    values = list(adict.values())
    swaped = 1
    while swaped:
        swaped = 0
        for i in range(len(values)):
            if i == len(values) - 1: continue
            if values[i] < values[i+1]:
                values[i], values[i+1] = values[i+1], values[i]
                keys[i], keys[i+1] = keys[i+1], keys[i] # swap
                swaped = 1
    return [keys, values]


history_file_path = os.path.expanduser('~') + '/.bash_history'
if len(sys.argv) == 2: history_file_path = sys.argv[1]

fs = open(history_file_path) # opens a File Stream for text reading
history = fs.read() # reads all what is in file
fs.close() # closes the file stream (no longer we need it)

history = history.split('\n') # => a list of strings seprated by a new line
cmds = {} # an empty map


for i in history:
    i = i.split(' ')
    cmd = ''
    
    if i[0] == 'sudo':
        if len(i) != 1:
            cmd = i[1]
    else:
        cmd = i[0]

    if cmd.startswith("#"): continue # because it a comment

    cmd = cmd.replace('./', '') # './NutC' => 'NutC' :D

    if not(fexist('/bin/' + cmd) or fexist('/usr/bin/' + cmd) or fexist('/usr/games/' + cmd) or fexist('/sbin/' + cmd)): continue

    if cmd not in cmds:
        cmds[cmd] = 1
    else:
        cmds[cmd] += 1


cmds = dictsort(cmds) # {'ls': 125, 'gcc': 10, 'cat': 100} => [['ls', 'cat', 'gcc'], [125, 100, 10]]

total = sum(cmds[1]) # [0, 1, 2] => 3
othercc = 0 # Other Commands Count (anything lower than 0.25%)
otherc = [] # list of other commands

for i in range(len(cmds[0])):
    cmd = cmds[0][i]
    count = cmds[1][i]
    percent = count / total * 100
    if percent < 0.25:
        othercc += count
        otherc.extend([cmd])
    else:
        print(cmd+': ', round(percent,2), '%', ' (', count, '/', total, ')', sep='')

print('other commands: ')
for i in otherc:
    print(i, end=', ')
print()
print('% of other: ', othercc/total*100,  '%', ' (', othercc, '/', total, ')', sep='')
